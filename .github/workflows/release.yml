name: Create Maven release
on:
  push:
    tags:
      - '*'
jobs:
  build:
    name: Build release
    strategy:
      matrix:
        target: [java8, java17]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.3
      - name: Download JDK
        run: |
          curl --silent -o ${{ runner.temp }}/jdk-17_linux-x64_bin.tar.gz \
            https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          jdkFile: ${{ runner.temp }}/jdk-17_linux-x64_bin.tar.gz
          java-version: 17
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.target }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-maven-
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Set env
        run: echo "TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Create settings.xml
        uses: whelk-io/maven-settings-xml-action@v15
        with:
          servers: |
            [
              {
                "id": "oss.sonatype.org",
                "username": "${{ secrets.SONATYPE_USER }}",
                "password": "${{ secrets.SONATYPE_PASSWORD }}"
              }
            ]
          profiles: |
            [
              {
                "id": "publish",
                "properties": {
                  "gpg.keyname": "${{ secrets.GPG_KEYNAME }}",
                  "gpg.passphrase": "${{ secrets.GPG_PASSPHRASE }}"
                }
              }
            ]
      - name: Set version
        run: mvn -B versions:set -DnewVersion=${{ env.TAG }}+${{ matrix.target }} versions:commit
      - name: Deploy artifacts
        run: mvn clean deploy -B -Ppublish,sonatype,gpg-sign -P${{ matrix.target }} --errors
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.TAG }}-${{ matrix.target }}
          draft: false
          prerelease: false
